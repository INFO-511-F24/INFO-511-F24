---
title: "Quantifying uncertainty"
categories: 
  - Application exercise
  - Answers
editor: visual
editor_options: 
  chunk_output_type: console
jupyter: python3
execute:
  warning: false
  error: false
---

An article in the The Tucson Citizen-Times published in the summer of 2020 claims that the average price per guest (ppg) for properties in Tucson is \$95 on Airbnb.
To evaluate their claim we will use a dataset on 50 randomly selected Asheville Airbnb listings in July 2024.
These data can be found in `data/tucson.csv`.

Let's load the packages we'll use first.

```{python}
#| label: load-packages
#| message: false

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
```

And then the data.

```{python}
#| label: load-data
#| message: false

tucson = pd.read_csv("data/tucson.csv")
```

# Hypotheses

-   **Your turn:** Write out the correct null and alternative hypothesis. Do this in both words *and* in proper notation.

Null Hypothesis $H_0$: The population mean is 95.

Alternative Hypothesis $H_1$: The population mean is not 95.
In proper notation:

$H_0=95$

$H_1\ne95$

# Observed data

Our goal is to use calculate the probability of a sample statistic at least as extreme as the one observed in our data if in fact the null hypothesis is true.

-   **Demo:** Calculate and report the sample statistic below using proper notation.

```{python}
#| label: point-estimate

sample_mean = np.mean(tucson)
print(f"Sample Mean (x̄) = {sample_mean}")
```

$$\bar{x} = 116.24$$

# The null distribution

Let's use simulation-based methods to conduct the hypothesis test specified above.

## Generate

We'll start by generating the null distribution.

-   **Demo:** Generate the null distribution?

```{python}
#| label: set-seed

np.random.seed(4321)
```

```{python}
#| label: null-dist-generate

null_dist = np.random.normal(loc=95, scale=10, size=100)
```

-   **Your turn:** Take a look at `null_dist`. What does each element in this distribution represent?

```{python}
#| label: null-dist-view

null_dist
```

## Visualize

-   **Question:** Before you visualize the distribution of `null_dist` -- at what value would you expect this distribution to be centered? Why?

At 75, since we created this distribution assuming $\mu=95$

-   **Demo:** Create an appropriate visualization for your null distribution. Does the center of the distribution match what you guessed in the previous question?

```{python}
#| label: null-dist-visualize

sns.histplot(null_dist, kde=True, palette="colorblind")
plt.xlabel('Sample Mean')
plt.ylabel('Frequency')
plt.title('Null Distribution with Sample Mean')
plt.show()
```

-   **Demo:** Now, add a vertical red line on your null distribution that represents your sample statistic.

```{python}
#| label: null-dist-annotate

sns.histplot(null_dist, kde=True)
plt.axvline(116.24, color='red', linestyle='solid', linewidth=2)
plt.xlabel('Sample Mean')
plt.ylabel('Frequency')
plt.title('Null Distribution with Sample Mean')
plt.show()
```

-   **Question:** Based on the position of this line, does your observed sample mean appear to be an unusual observation under the assumption of the null hypothesis?

Yes, it’s pretty far from the center.

# p-value

Above, we eyeballed how likely/unlikely our observed mean is.
Now, let's actually quantify it using a p-value.

-   **Question:** What is a p-value?

The probability of the observed sample statistic, or something more extreme in the direction of the alternative hypothesis, if in fact the null hypothesis is true.

-   **Demo:** Visualize the p-value.

```{python}
#| label: p-value-visualize

p_value = (null_dist >= sample_mean).mean()
print(f"P-value = {p_value}")

# Visualize the p-value
sns.histplot(null_dist, kde=True)
plt.axvline(116.24, color='red', linestyle='solid', linewidth=2)
plt.axvline(73.77, color='red', linestyle='dashed', linewidth=2)
plt.xlabel('Sample Mean')
plt.ylabel('Frequency')
plt.title('Null Distribution with P-value')
plt.show()
```

-   **Your turn:** What is the p-value?

$\text{P-value}=0.02$

# Conclusion

-   **Your turn:** What is the conclusion of the hypothesis test based on the p-value you calculated? Make sure to frame it in context of the data and the research question. Use a significance level of 5% to make your conclusion.

Since the p-value is smaller than the significance level, we reject the null hypothesis.
The data provide convincing evidence that the average price per guest of properties on Airbnb in Tucson is different than \$95.

-   **Demo:** Interpret the p-value in context of the data and the research question.

If in fact the true average price per guest of properties on Airbnb in Tucson is \$95, the probability of observing a random sample of 50 Tucson Airbnb listings where the average price per guest is \$116.23 or higher or \$73.77 or lower is 0.02.

# Get real...

-   **Question:** What we did above was a "toy example" to illustrate hypothesis test. What would you change to make this a real, more robust analysis?

Change the number of resamples to a higher number, somewhere \~10,000 replicates.

-   **Demo:** Work through the analysis again with these changes.

```{python}
#| label: hypothesis-test

null_dist_large = np.random.normal(loc=95, scale=10, size=10000)

null_dist_large = np.array(null_dist_large)

point_estimate = tucson['ppg'].mean()
print(f"Point Estimate (Sample Mean) = {point_estimate}")

p_value = (null_dist_large >= point_estimate).mean() if point_estimate > 95 else (null_dist <= point_estimate).mean()
p_value_two_sided = 2 * min((null_dist_large >= point_estimate).mean(), (null_dist_large <= point_estimate).mean())
print(f"Two-sided P-value = {p_value_two_sided}")
```

```{python}

sample_mean_large = null_dist_large.mean()

# Visualize the new p-value
sns.histplot(null_dist_large, kde=True)
plt.axvline(sample_mean_large, color='red', linestyle='dashed', linewidth=2)
plt.fill_betweenx(y=[0, max(sns.histplot(null_dist_large, kde=True).get_lines()[0].get_ydata())],
                  x1=sample_mean_large, x2=max(null_dist_large), color='red', alpha=0.3)
plt.xlabel('Sample Mean')
plt.ylabel('Frequency')
plt.title('Null Distribution with P-value (Larger Sample)')
plt.show()
```
