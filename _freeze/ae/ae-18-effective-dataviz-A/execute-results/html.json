{
  "hash": "7d0aead9a137ab624077537b01f23f93",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'AE 18: Trends instructional staff employees in universities'\ncategories:\n  - Application exercise\n  - Answers\nexecute:\n  warning: false\n  error: false\n---\n\nThe American Association of University Professors (AAUP) is a nonprofit membership association of faculty and other academic professionals.\n[This report](https://www.aaup.org/sites/default/files/files/AAUP_Report_InstrStaff-75-11_apr2013.pdf) by the AAUP shows trends in instructional staff employees between 1975 and 2011, and contains the following image.\nWhat trends are apparent in this visualization?\n\n![](https://sta199-s24.github.io/images/staff-employment.png){fig-align=\"center\"}\n\n## Packages\n\n::: {#packages .cell message='false' execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n:::\n\n\n## Data\n\nEach row in this dataset represents a faculty type, and the columns are the years for which we have data.\nThe values are percentage of hires of that type of faculty for each year.\n\n::: {#cell-load-data-staff .cell message='false' execution_count=2}\n``` {.python .cell-code}\nstaff = pd.read_csv(\"data/instructional-staff.csv\")\nstaff\n```\n\n::: {#load-data-staff .cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>faculty_type</th>\n      <th>1975</th>\n      <th>1989</th>\n      <th>1993</th>\n      <th>1995</th>\n      <th>1999</th>\n      <th>2001</th>\n      <th>2003</th>\n      <th>2005</th>\n      <th>2007</th>\n      <th>2009</th>\n      <th>2011</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Full-Time Tenured Faculty</td>\n      <td>29.0</td>\n      <td>27.6</td>\n      <td>25.0</td>\n      <td>24.8</td>\n      <td>21.8</td>\n      <td>20.3</td>\n      <td>19.3</td>\n      <td>17.8</td>\n      <td>17.2</td>\n      <td>16.8</td>\n      <td>16.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Full-Time Tenure-Track Faculty</td>\n      <td>16.1</td>\n      <td>11.4</td>\n      <td>10.2</td>\n      <td>9.6</td>\n      <td>8.9</td>\n      <td>9.2</td>\n      <td>8.8</td>\n      <td>8.2</td>\n      <td>8.0</td>\n      <td>7.6</td>\n      <td>7.4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Full-Time Non-Tenure-Track Faculty</td>\n      <td>10.3</td>\n      <td>14.1</td>\n      <td>13.6</td>\n      <td>13.6</td>\n      <td>15.2</td>\n      <td>15.5</td>\n      <td>15.0</td>\n      <td>14.8</td>\n      <td>14.9</td>\n      <td>15.1</td>\n      <td>15.4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Part-Time Faculty</td>\n      <td>24.0</td>\n      <td>30.4</td>\n      <td>33.1</td>\n      <td>33.2</td>\n      <td>35.5</td>\n      <td>36.0</td>\n      <td>37.0</td>\n      <td>39.3</td>\n      <td>40.5</td>\n      <td>41.1</td>\n      <td>41.3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Graduate Student Employees</td>\n      <td>20.5</td>\n      <td>16.5</td>\n      <td>18.1</td>\n      <td>18.8</td>\n      <td>18.7</td>\n      <td>19.0</td>\n      <td>20.0</td>\n      <td>19.9</td>\n      <td>19.5</td>\n      <td>19.4</td>\n      <td>19.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Recreate\n\n-   **Your turn (10 minutes):** Recreate the visualization above. Try to match as many of the elements as possible. Hint: You might need to reshape your data first.\n\n::: {#ec00c43e .cell execution_count=3}\n``` {.python .cell-code}\nstaff_long = staff.melt(id_vars=['faculty_type'], var_name='year', value_name='percentage')\nstaff_long['percentage'] = pd.to_numeric(staff_long['percentage'])\nstaff_long['year'] = pd.to_numeric(staff_long['year'])\n\nfaculty_order = [\n    \"Full-Time Tenured Faculty\",\n    \"Full-Time Tenure-Track Faculty\",\n    \"Full-Time Non-Tenure-Track Faculty\",\n    \"Part-Time Faculty\",\n    \"Graduate Student Employees\"\n]\nstaff_long['faculty_type'] = pd.Categorical(staff_long['faculty_type'], categories=faculty_order, ordered=True)\nstaff_long['year'] = staff_long['year'].astype(str)\n```\n:::\n\n\n::: {#6462cfea .cell fig-asp='0.5' fig-width='12' execution_count=4}\n``` {.python .cell-code}\nsns.set_theme(style=\"whitegrid\")\n\nplt.figure(figsize=(10, 6))\nsns.barplot(data=staff_long, x='faculty_type', y='percentage', hue='year', dodge=True)\nplt.ylim(0, 45)\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.legend(title='Year', loc='upper left', bbox_to_anchor=(0.4, 0.93), ncol=5)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-5-output-1.png){width=871 height=526}\n:::\n:::\n\n\n## Place time on x-axis\n\n-   **Demo:** Convert the visualization to a line plot with time on the x-axis.\n\n::: {#61273396 .cell fig-asp='0.5' fig-width='12' execution_count=5}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type', marker='o')\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.legend(title='Faculty Type', loc='upper left', bbox_to_anchor=(1.05, 1), borderaxespad=0)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-6-output-1.png){width=1136 height=526}\n:::\n:::\n\n\n## Pay attention to variable types\n\n-   **Question:** What is wrong with the x-axis of the plot above? How can you fix it?\n\nTime is represented as a character string (equally spaces between levels) instead of on a continuous scale (with spacing indicating numbers of years between ticks.\n\n-   **Your turn:** Implement the fix for the x-axis of the plot.\n\n::: {#cfd86f92 .cell fig-asp='0.5' fig-width='12' execution_count=6}\n``` {.python .cell-code}\nstaff_long['year'] = pd.to_numeric(staff_long['year'])  # Ensure year is treated as a numeric type\n\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type', marker='o')\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.legend(title='Faculty Type', loc='upper left', bbox_to_anchor=(1.05, 1), borderaxespad=0)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-7-output-1.png){width=1136 height=526}\n:::\n:::\n\n\n## Use an accessible color scale\n\n**Question:** What do we mean by an accessible color scale?\nWhat types of color vision deficiencies are there?\n\n-   **Demo:** What does the plot look like to people with various color vision deficiencies?\n\n-   **Demo:** Remake the plot with an accessible color scale.\n\n::: {#25ae7925 .cell fig-asp='0.5' fig-width='12' execution_count=7}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type', marker='o', palette='colorblind')\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.legend(title='Faculty Type', loc='upper left', bbox_to_anchor=(1.05, 1), borderaxespad=0)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-8-output-1.png){width=1136 height=526}\n:::\n:::\n\n\n## Use direct labeling\n\n-   **Demo:** Remove the legend and add labels for each line at the end of the line (where `x` is the `max(x)` recorded).\n\n::: {#ebf39738 .cell fig-asp='0.5' fig-width='12' execution_count=8}\n``` {.python .cell-code}\npalette = sns.color_palette(\"colorblind\", len(faculty_order))\npalette_dict = dict(zip(faculty_order, palette))\n\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type', marker='o', palette=palette, legend=False)\n\nfor faculty in staff_long['faculty_type'].unique():\n    latest_year = staff_long[staff_long['faculty_type'] == faculty]['year'].max()\n    latest_value = staff_long[(staff_long['faculty_type'] == faculty) & (staff_long['year'] == latest_year)]['percentage'].values[0]\n    plt.text(latest_year + 1, latest_value, faculty, horizontalalignment='left', size='medium', color=palette_dict[faculty], weight='semibold')\n\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-9-output-1.png){width=1069 height=526}\n:::\n:::\n\n\n## Use color to draw attention\n\n-   **Demo:** Redo the line plot where Part-time Faculty is red and the rest are gray.\n\n::: {#aececec8 .cell execution_count=9}\n``` {.python .cell-code}\nstaff_long['faculty_type_color'] = staff_long['faculty_type'].apply(lambda x: '#b22222' if x == 'Part-Time Faculty' else '#808080')\n```\n:::\n\n\n::: {#4a3289f4 .cell fig-asp='0.5' fig-width='12' execution_count=10}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type_color', marker='o', ci=False, legend=False, palette=['#808080', '#b22222'])\nfor faculty in staff_long['faculty_type'].unique():\n    latest_year = staff_long[staff_long['faculty_type'] == faculty]['year'].max()\n    latest_value = staff_long[(staff_long['faculty_type'] == faculty) & (staff_long['year'] == latest_year)]['percentage'].values[0]\n    plt.text(latest_year + 1, latest_value, faculty, horizontalalignment='left', size='medium', color='black' if faculty != 'Part-Time Faculty' else '#b22222', weight='semibold')\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-11-output-1.png){width=1069 height=593}\n:::\n:::\n\n\n## Pick a purpose + use labels to communicate the message\n\n::: {#ca8d307f .cell fig-asp='0.5' fig-width='12' execution_count=11}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type_color', palette=['#808080', '#b22222'], legend=False)\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.annotate('Part-Time\\nFaculty', xy=(2011, 41), xytext=(2012, 41), color='#b22222', size=12, ha='left')\nplt.annotate('Other\\nFaculty', xy=(2011, 13.5), xytext=(2012, 13.5), color='#808080', size=12, ha='left')\nplt.plot([2011.5, 2011.5], [7, 20], color='#808080', linestyle='dotted')\nplt.ylim(0, 45)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-12-output-1.png){width=857 height=526}\n:::\n:::\n\n\n## Simplify\n\n::: {#a1582015 .cell fig-asp='0.5' fig-width='12' execution_count=12}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=staff_long, x='year', y='percentage', hue='faculty_type_color', palette=['#808080', '#b22222'], legend=False, ci=False)\nplt.xlabel('')\nplt.ylabel('Percent of Total Instructional Staff')\nplt.title('Instruction by part-time faculty on a steady increase\\nTrends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals')\nplt.annotate('Part-Time\\nFaculty', xy=(2011, 41), xytext=(2012, 41), color='#b22222', size=12, ha='left')\nplt.annotate('Other\\nFaculty', xy=(2011, 13.5), xytext=(2012, 13.5), color='#808080', size=12, ha='left')\nplt.plot([2011.5, 2011.5], [7, 20], color='#808080', linestyle='dotted')\nplt.ylim(0, 45)\nplt.grid(False)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ae-18-effective-dataviz-A_files/figure-html/cell-13-output-1.png){width=857 height=542}\n:::\n:::\n\n\n## Summary\n\n-   Represent percentages as parts of a whole\n-   Place variables representing time on the x-axis when possible\n-   Pay attention to data types, e.g., represent time as time on a continuous scale, not years as levels of a categorical variable\n-   Prefer direct labeling over legends\n-   Use accessible colors\n-   Use color to draw attention\n-   Pick a purpose and label, color, annotate for that purpose\n-   Communicate your main message directly in the plot labels\n-   Simplify before you call it done (a.k.a. \"Before you leave the house, look in the mirror and take one thing off\")\n\n",
    "supporting": [
      "ae-18-effective-dataviz-A_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}