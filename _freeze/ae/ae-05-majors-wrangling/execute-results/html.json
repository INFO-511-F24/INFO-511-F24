{
  "hash": "d636a2cf72b6fb5cea0cda037a44f4ee",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'AE 05: Wrangling College Majors'\nexecute:\n  warning: false\n  error: false\n---\n\n## Goal\n\nOur ultimate goal in this application exercise is to make the following data visualization.\n\n::: {#d546477c .cell execution_count=1}\n\n::: {.cell-output .cell-output-display}\n![](ae-05-majors-wrangling_files/figure-html/cell-2-output-1.png){width=685 height=538}\n:::\n:::\n\n\n## Data\n\nFor this exercise you will work with data on the proportions of Bachelor’s degrees awarded in the US between 2005 and 2015.\nThe dataset you will use is in your `data/` folder and it’s called `degrees.csv`.\n\n::: {#load-packages-data .cell message='false' execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import FormatStrFormatter\nimport seaborn as sns\n\ndegrees = pd.read_csv(\"data/degrees.csv\")\n```\n:::\n\n\nAnd let's take a look at the data.\n\n::: {#da347d18 .cell execution_count=3}\n``` {.python .cell-code}\ndegrees.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>field</th>\n      <th>1971</th>\n      <th>1976</th>\n      <th>1981</th>\n      <th>1986</th>\n      <th>1991</th>\n      <th>1996</th>\n      <th>2001</th>\n      <th>2005</th>\n      <th>2006</th>\n      <th>2007</th>\n      <th>2008</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Agriculture and natural resources</td>\n      <td>12672.0</td>\n      <td>19402.0</td>\n      <td>21886.0</td>\n      <td>16823.0</td>\n      <td>13124</td>\n      <td>21425</td>\n      <td>23370</td>\n      <td>23002.0</td>\n      <td>23053.0</td>\n      <td>23133.0</td>\n      <td>24113</td>\n      <td>24982.0</td>\n      <td>26343.0</td>\n      <td>28630.0</td>\n      <td>30972.0</td>\n      <td>33592.0</td>\n      <td>35125.0</td>\n      <td>36277.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Architecture and related services</td>\n      <td>5570.0</td>\n      <td>9146.0</td>\n      <td>9455.0</td>\n      <td>9119.0</td>\n      <td>9781</td>\n      <td>8352</td>\n      <td>8480</td>\n      <td>9237.0</td>\n      <td>9515.0</td>\n      <td>9717.0</td>\n      <td>9805</td>\n      <td>10119.0</td>\n      <td>10051.0</td>\n      <td>9831.0</td>\n      <td>9727.0</td>\n      <td>9757.0</td>\n      <td>9149.0</td>\n      <td>9090.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Area, ethnic, cultural, gender, and group studies</td>\n      <td>2579.0</td>\n      <td>3577.0</td>\n      <td>2887.0</td>\n      <td>3021.0</td>\n      <td>4776</td>\n      <td>5633</td>\n      <td>6160</td>\n      <td>7569.0</td>\n      <td>7879.0</td>\n      <td>8194.0</td>\n      <td>8454</td>\n      <td>8772.0</td>\n      <td>8620.0</td>\n      <td>8955.0</td>\n      <td>9228.0</td>\n      <td>8850.0</td>\n      <td>8275.0</td>\n      <td>7782.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Biological and biomedical sciences</td>\n      <td>35705.0</td>\n      <td>54154.0</td>\n      <td>43078.0</td>\n      <td>38395.0</td>\n      <td>39482</td>\n      <td>61014</td>\n      <td>60576</td>\n      <td>65915.0</td>\n      <td>70607.0</td>\n      <td>76832.0</td>\n      <td>79829</td>\n      <td>82828.0</td>\n      <td>86391.0</td>\n      <td>89984.0</td>\n      <td>95850.0</td>\n      <td>100397.0</td>\n      <td>104657.0</td>\n      <td>109896.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Business</td>\n      <td>115396.0</td>\n      <td>143171.0</td>\n      <td>200521.0</td>\n      <td>236700.0</td>\n      <td>249165</td>\n      <td>226623</td>\n      <td>263515</td>\n      <td>311574.0</td>\n      <td>318042.0</td>\n      <td>327531.0</td>\n      <td>335254</td>\n      <td>348056.0</td>\n      <td>358119.0</td>\n      <td>365133.0</td>\n      <td>367235.0</td>\n      <td>360887.0</td>\n      <td>358132.0</td>\n      <td>363799.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Pivoting\n\n-   **Demo:** Pivot the `degrees` data frame *longer* such that each row represents a degree type / year combination and `year` and `n`umber of graduates for that year are columns in the data frame.\n\n::: {#pivot .cell execution_count=4}\n``` {.python .cell-code}\n# add your code here\n```\n:::\n\n\n-   **Question:** What is the type of the `year` variable? Why? What should it be?\n\n*Add your response here.*\n\n-   **Demo:** Start over with pivoting, and this time also make sure `year` is a Datetime variable in the resulting data frame.\n\n::: {#pivot-with-transform .cell execution_count=5}\n``` {.python .cell-code}\n# add your code here\n```\n:::\n\n\n-   **Question:** What would an `NA` mean in this context? *Hint:* The data come from the university registrars, and they have records on every single graduates, there shouldn't be anything \"unknown\" to them about who graduated when.\n\n*Add your response here.*\n\n-   **Demo:** Add on to your pipeline that you started with pivoting and convert `NA`s in `n` to `0`s.\n\n\n```{r}\n#| label: convert-na\n\n# add your code here\n```\n\n\n-   **Demo:** In our plot the degree types are Business, Computer and information sciences, Engineering, and Psychology. This information is in our dataset, in the `degree` column, but this column also has additional characters we don't need. Filter the dataframe with levels Business, Computer and information sciences, Engineering, and Psychology based on `degree`. Do this by adding on to your pipeline from earlier.\n\n\n```{r}\n#| label: degree-type\n\n# add your code here\n```\n\n\n-   **Your turn:** Now we start making our plot, but let's not get too fancy right away. Create the following plot, which will serve as the \"first draft\" on the way to our [Goal]. Do this by adding on to your pipeline from earlier.\n\n::: {#9fdb7e35 .cell execution_count=6}\n\n::: {.cell-output .cell-output-display}\n![](ae-05-majors-wrangling_files/figure-html/cell-7-output-1.png){width=685 height=501}\n:::\n:::\n\n\n```{r}\n#| label: plot-draft\n\n# add your code here\n```\n\n\n-   **Your turn:** What aspects of the plot need to be updated to go from the draft you created above to the [Goal] plot at the beginning of this application exercise.\n\n*Add your response here.*\n\n-   **Demo:** Update line colors using the following level / color assignments. Once again, do this by adding on to your pipeline from earlier.\n    -   Business: \"#53868B\"\n\n    -   Engineering: \"#7AC5CD\"\n\n    -   Computer and information sciences: \"#8B814C\"\n\n    -   Psychology: \"#CDBE70\"\n\n\n```{r}\n#| label: plot-improve-1\n\n# add your code here\n```\n\n\n-   **Your turn:** Update the plot labels (`title`, `x`, and `y`) and use `sns.set_style(\"white_grid\")`. Once again, do this by adding on to your pipeline from earlier.\n\n\n```{r}\n#| label: plot-improve-2\n\n# add your code here\n```\n\n",
    "supporting": [
      "ae-05-majors-wrangling_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}