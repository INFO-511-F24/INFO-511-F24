{
  "hash": "870b94ad4ec0e9dc1f0c7e7a3b36e878",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Principal component analysis\"\ncategories: \n  - Application exercise\n---\n\nIn this application exercise, we will:\n\n1.  Learn about Principal Component Analysis\n\n2.  Load the Penguins Dataset: Import and explore the dataset to understand its structure and the features available for analysis.\n\n3.  Preprocess the Data: Clean the data by handling missing values and standardize the numerical features for PCA.\n\n4.  Perform PCA: Apply Principal Component Analysis to reduce the dimensionality of the data and extract the principal components.\n\n5.  Visualize the PCA Result: Create a scatter plot of the principal components to visualize the clustering of different penguin species.\n\n# Learn about PCA\n\n## Exercise 1\n\nWatch this video on Principal Component Analysis:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FD4DeN81ODY?si=ZKBrlIsgMy-F9oq6\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen>\n\n</iframe>\n\n-   What were three takeaways from this video?\n    Include how you think linear algebra contributes to PCA:\n\n*Add response here.*\n\n# PCA in Python\n\n## Packages\n\nWe will primarily use the `seaborn` and `sklearn` packages.\n\n::: {#e9434df3 .cell execution_count=1}\n``` {.python .cell-code}\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n## Exercise 2\n\n**Load the Penguins Dataset using `seaborn`**\n\n::: {#498060d0 .cell execution_count=2}\n``` {.python .cell-code}\n# add code here\n```\n:::\n\n\n## Exercise 3\n\n**Preprocess the data**\n\nWe need to handle missing values and select the numerical features for PCA.\n\n::: {#b8c470d5 .cell execution_count=3}\n``` {.python .cell-code}\n# add code here\n```\n:::\n\n\n## Exercise 4\n\n**Perform PCA**\n\nUse `PCA` from `sklearn` to reduce the dimensionality of the data.\n**Hint**: use two principal components\n\n::: {#c39b5b91 .cell execution_count=4}\n``` {.python .cell-code}\n# add code here\n```\n:::\n\n\n## Exercise 5\n\n**Visualize the PCA Result**\n\nUse `seaborn` to visualize the principal components.\n\n::: {#bfc9876c .cell execution_count=5}\n``` {.python .cell-code}\n# add code here\n```\n:::\n\n\n",
    "supporting": [
      "ae-17-pca_files"
    ],
    "filters": [],
    "includes": {}
  }
}